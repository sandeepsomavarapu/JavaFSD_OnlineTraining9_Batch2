Language:
=========

		English:communication



JAVA:
=====
	Programming Language:Communication with machines


Programming Language

		POP										OOP
		B,BCPL,COBOL,PHOTON,C..         	c++,java,python,.net....Smalltalk


								1)Performance		inheritance,polymorphisam	
								2)Security			encapsulation,abstraction


1993			ORACLE
WHY JAVA?sun micro system-->James gosling
=========
	1996 
			JDK
	simple
	
	
	
	java 20   java1.8
	
			1)Platform independent 
			2)Garbage Collection  -->garbage collector 
	
	ORacle 											Microsoft
WORA		windows 					

		.java 										.net

sandeep				rajashekar			pooja 
windows 11				linux			mac
	.net app
WORA
2 gb

MCQ LINK:
===========

http://www.maamu.itgo.com/other/javaquiz1.htm




Java installation and path setup

https://www.javatpoint.com/javafx-how-to-install-java

java -version.

		java version "1.8.0_281"
		Java(TM) SE Runtime Environment (build 1.8.0_281-b09)
		Java HotSpot(TM) 64-Bit Server VM (build 25.281-b09, mixed mode)

javac -version
javac 1.8.0_281



welcome to java 


.java	.html    .py


telugu  alphabets 56 		26

33 python

keywords 53   lower case 


Welcome Example:
=================

class Welcome
{
	
public static void main(String args[])
{
	
	System.out.println("welcome to java");
	
	
}	
	
	
}

//jdk-->jre-->JVM
//machine language --->0's 1's / binary /byte 

//translation-->translator

//compailation-->compiler   user understandable lang-->machine understandable lang

//source code -->byte code 

// .java -->.class-(JVM)


//javac filename.java--->.class-->jvm-->output



Eclipse :
============
https://www.eclipse.org/downloads/packages/release/2020-12/r


Eclipse IDE for Enterprise Java Developers



Identifiers:-
==============
 any name in java will call it as identifier
 
	classname,method,variable,interface,.....
 
 
			a-z
			A-Z
			0-9
			$
			_
 
 variables:
 ===========
 contactname contactnumber
 
 
	sandeeptrainer		6323273672323


		datatype varname=value;//static typing
		
		
				datatype varname;//declaration of variable
				
				varname=value;//intialization of variable
				
				
	10 keywrods 			



datatype		-->PDT      NPDT(string,array,class....)

	contactnum,age,bankaccntnum,aadhar num--->numeric data (numbers)
	
	address,name,fname,--->characters
	
	salary->12.54 lpa,marks->9.5,balance 2000.50  -->decimal value


8 PDT 				

byte 		1 byte --8bits	-128 to 127				 long aadharno=89189382393298
short		2 bytes			-32768 to 32767
int 		4 bytes			-2147583648 to 2147483647
long		8 bytes			-2 power 63 to 2 power 63 -1 	long age=30; byte age1=29;

float		4 bytes			2000.5498779979833f
double		8 bytes					

char 		2 bytes			'a'	 c-->english-->ASCII  java-->18 international lang	M/F  'M'
boolean		1 bit    						 		 true-1,false-0



datatype varname=value;


byte age=30;

		2 types
		
		1)local variable  :variable inside the  method
		
		2)global variable  :variable outside the method 
		
						1)instance 		2)static 
		
syntax:
========
	static	int countryCode=91;

			int eid=1212;

Memory
======
	static properties will get memory space only once  at the time of class loading into JVM
	instance properties will get memory space for every object creation
	
				class A
				
				Object : classname objname=new classname();
				
							A obj=new A();
	
Access:
=======
			static properties can be accessed by using classname
			instance properties can be accessed by using objeref 


Usage :
=======
		to represent common data will go static like countryname,school name,clg name.....
		to represent unique data will go instance like eid,aadhar,pan,contact......
		
	


eclipse,intellji,myeclipse,netbeans.....vscode
		
		
		
		
		
public class Welcome {
	static int countryCode = 91;//static and global
	int empId=111;				//instance and global

	public static void main(String[] args) {
		// main-->ctrl+space-->enter

		int result=230;//local variables
		
		System.out.println("welcome to java eclipse");
		
		System.out.println(result);
		
		System.out.println(Welcome.countryCode);
		//classname objname=new classname();
		Welcome wel=new Welcome();//object 
		
		System.out.println(wel.empId);
	}
}// ctrl+shift+f

		
		
		
		

